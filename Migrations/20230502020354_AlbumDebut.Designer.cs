// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TPDos.Data;

#nullable disable

namespace TPdos.Migrations
{
    [DbContext(typeof(ArtistaContext))]
    [Migration("20230502020354_AlbumDebut")]
    partial class AlbumDebut
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("AlbumBanda", b =>
                {
                    b.Property<int>("AlbumsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BandasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlbumsId", "BandasId");

                    b.HasIndex("BandasId");

                    b.ToTable("AlbumBanda");
                });

            modelBuilder.Entity("TPdos.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnioLanzamiento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("TPdos.Models.AlbumDebut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnioLanzamiento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BandaId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AlbumDebut");
                });

            modelBuilder.Entity("TPdos.Models.Artista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlbumDebutId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Edad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlbumDebutId");

                    b.ToTable("Artista");
                });

            modelBuilder.Entity("TPdos.Models.Banda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlbumDebutId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fundation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlbumDebutId")
                        .IsUnique();

                    b.HasIndex("ArtistaId");

                    b.ToTable("Banda");
                });

            modelBuilder.Entity("AlbumBanda", b =>
                {
                    b.HasOne("TPdos.Models.Album", null)
                        .WithMany()
                        .HasForeignKey("AlbumsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TPdos.Models.Banda", null)
                        .WithMany()
                        .HasForeignKey("BandasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TPdos.Models.Artista", b =>
                {
                    b.HasOne("TPdos.Models.AlbumDebut", "AlbumDebut")
                        .WithMany()
                        .HasForeignKey("AlbumDebutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlbumDebut");
                });

            modelBuilder.Entity("TPdos.Models.Banda", b =>
                {
                    b.HasOne("TPdos.Models.AlbumDebut", "AlbumDebut")
                        .WithOne("Banda")
                        .HasForeignKey("TPdos.Models.Banda", "AlbumDebutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TPdos.Models.Artista", "Artista")
                        .WithMany("Bandas")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlbumDebut");

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("TPdos.Models.AlbumDebut", b =>
                {
                    b.Navigation("Banda")
                        .IsRequired();
                });

            modelBuilder.Entity("TPdos.Models.Artista", b =>
                {
                    b.Navigation("Bandas");
                });
#pragma warning restore 612, 618
        }
    }
}
